Definiremos el protocolo GET A CHAIR (G.A.C):

    Servicios que proporciona el protocolo:

        Este protocolo presta servicios de comunicación para la reservación de
        sillas dentro de un vagón. Así mismo, maneja la disponibilidad de
        puestos y advierte a los clientes cuando el vagón se quedó sin
        disponibilidad.


    Suposiciones sobre el entorno donde se ejecuta el protocolo:

        El protocolo fue creado para trabajar con el protocolo de transporte
        TCP, esto permite una mayor fidelidad en la transmisión de paquetes.
        En cuanto a los puertos, se decidió usar el puerto 7557 como puerto 
        por defecto para las comunicaciones hacia el servidor, debido a que
        es un puerto fuera del rango de los puerto-conocidos y esto evita
        que su transmisión sea bloqueada en algunos escenarios. Aunque, se 
        puede escoger cualquier puerto disponible para su uso.

        El software implementado para trabajar con este protocolo fue creado
        en SOs basados en unix y originalmente solo se planea trabajar en estos
        entornos. se buscó implementarse con la mayor cantidad de librerías 
        POSIX, pero a pesar de ello la herramienta que funciona como cliente
        se tuvo que implementar de distintas maneras en entornos MAC y LINUX

        La implementación del servidor permite la concurrencia, permite 
        trabajar con múltiples clientes a la vez. Aunque, el orden de 
        llegada de las peticiones se respeta. La concurrencia se implementó
        con Asincronía de entrada y salida de información, debido al alto
        overhead producido por los servidores multi-proceso y multi-hilos.


    Vocabulario de los mensajes utilizados en el protocolo:

        El vocabulario del protocolo se dividió en dos tipos:

            Query (petición):

                GET CHAIR <fila,columna>  
                // Mensaje encargado de solicitar una silla al servidor

            Respond (respuesta):

                ACCEPTED OFFER
                // Respuesta positiva, confirmando la reservación de la silla

                DECLINED OFFER XY XY XY...
                // Respuesta negativa, rechazando la reservación debido a que
                   el puesto pedido está ocupado y a anexado a la respuesta
                   se encuentran todas las ofertas de sillas disponibles en el
                   momento

                IMPOSIBLE OFFER
                // Respuesta negativa, rechazando la reservación debido a que
                   no existen más puestos disponibles

                NONEXISTENT OFFER
                // Las opciones de filas y/o columnas sugeridas no se encuentra
                   dentro de las disponibles en el vagón.

                CORRUPTED MESSAGE
                // El mensaje (query) recibido por el servidor no se encuentra 
                   dentro del vocabulario del protocolo.

    Formato de los mensajes del vocabulario del protocolo:

        Query (petición):

             [ 10 char ]-[ 1 int ]-[ 1 char ]-[ 1 int ]
              GET CHAIR      X                    Y            

        Respond (respuesta):

             [  14 char   ]
             ACCEPTED OFFER

             [   15 char    ]-Cadena{ [ 2 int ]-[ 1 char ] }
             DECLINED OFFER              XY XY XY XY...

             [   15 char   ]
             IMPOSIBLE OFFER

             [    17 char    ]
             NONEXISTENT OFFER

             [    17 char    ]
             CORRUPTED MESSAGE


    Diagrama del mensaje:

        1.- Aceptación de una reservación:

            cliente:  GET CHAIR <fila,columna>

            servidor: ACCEPTED OFFER

        2.- Rechazamiento de una reservación(puesto ocupado):

            cliente:  GET CHAIR <fila,columna>
            servidor: DECLINED OFFER XY XY XY...
            cliente:  GET CHAIR <fila,columna>

            Posibles escenarios 

            { servidor: ACCEPTED OFFER 
            }

            { servidor: DECLINED OFFER XY XY XY...
            } // Este estado de comunicación obligaría a repetir el query del 
                 cliente

        3.- Rechazamiento de una reservación(Vagón full):

            cliente:  GET CHAIR <fila,columna>
            servidor: IMPOSIBLE OFFER

        4.- Rechazamiento de una reservación(petición fuera de rango):

            cliente:  GET CHAIR <fila,columna>
            servidor: NONEXISTENT OFFER

        5.- Mensaje corrupto enviado al servidor

            cliente: EL SIGNIFICADO DE LA VIDA ES 42
            servidor: CORRUPTED MESSAGE








